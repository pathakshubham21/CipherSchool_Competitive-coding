 ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int value = 0;                              //
        value = l1->val + l2->val;                 // add the first values of l1 and l2 to l  
        ListNode* l = new ListNode (value % 10);  //
        value /= 10;   // now 'value' holds the reminder
        
        ListNode* ptr = l;
        while (l1->next != NULL || l2->next != NULL){
            if (l1->next != NULL && l2->next != NULL){   // if both l1 and l2 still have value
                l1 = l1->next;  l2 = l2->next;
                value += l1->val + l2->val;
                ListNode* node = new ListNode (value % 10);
                value /= 10;
                ptr->next = node;
                ptr = node;
            }  
            
            else if (l2->next != NULL){    // if only l2 still has value
                l2 = l2->next;
                value += l2->val;
                ListNode* node = new ListNode (value % 10);
                value /= 10;
                ptr->next = node;
                ptr = node;
            }
            
            else {    // if only l1 still has value
                l1 = l1->next;
                value += l1->val;
                ListNode* node = new ListNode (value % 10);
                value /= 10;
                ptr->next = node;
                ptr = node;
            }
        }
        
        if (value > 0){     // check if there is a reminder from the last sum
            ListNode* node = new ListNode (value);
            ptr->next = node;
        }
            
        return l; 
    }
